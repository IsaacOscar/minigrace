Minigrace supports most of the specified dynamically-typed language, and
a static structural type-checker. It does not yet support:
- Overriding the if-then-else construct: only the built-in construct may
  begin with "if()". for()do and while()do can be used as any ordinary
  method.

Some functionality is incomplete:
- Runtime type checks use only method names and not any other type
  information. This applies both to pattern-matching and to gradual
  checks at method boundaries.
- Numeric literals in non-decimal bases may only be integral.
- Interpolated code inside string literals may not contain a right brace
  in any context.
- Visibility annotations are checked only dynamically, not statically
- Types are checked dynamically, but constraints on tyype parameters are
  not checked.

The compiler also supports the following extensions used internally,
which are not part of the language and are subject to change:

- Methods defined in the prelude can always be accessed through the
  implicitly-bound "prelude" object.


Certain environment variables affect the behaviour of running Grace
programs:
- GRACE_MODULE_PATH is used to find dynamic modules.
