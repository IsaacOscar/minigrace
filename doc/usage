# Using the Minigrace Compiler

Minigrace supports a number of modes and options. This document will
describe how these can be used for different tasks, and the expected
results of compilation.

Unless another location is specified, the resulting output file or files
will be generated in the same directory as the input. It is best to
compile code in the current directory, particularly when multiple
modules may be imported. The minigrace executable may be located
elsewhere, and will find its support files either alongside itself, or in a directory found on the environment variable `GRACE_MODULE_PATH`.

 * To compile _and run_ a Grace source file, use
 
 `mgc file.grace`
 
   In most cases, this command will be all that is required.  Any modules imported by *file.grace* will also be compiled (unless compiled versions are found on `GRACE_MODULE_PATH`).

 * To produce an executable, but not run it, use:
  
  `mgc --make file.grace`
  
  This mode produces output in a file called *file.js*, which can be executed with
  
  `grace file`

 * To get more output, describing what the compiler  is doing while it runs, use:
 
  `mgc --verbose [n]`
  
  This option can be used in combination with any of the others.
  `n` is  a number between 0 and 100; if omitted, the defult is 40.
  The higher the number, the more output is provided.

 * To pretty-print the input source code as Grace, use:
 
  `mgc --target grace -o file.js file.grace`

 * To compile to a specialised target, like a parse tree, use:
  
    `mgc --target parse file.js`
    
  There are several targets for specialised purposes. Use `mgc --target help`
  to list them. Useful targets are `lex` (tokens) and `ast`.

